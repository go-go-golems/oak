name: definitions
short: A simple example to extract go functions and methods, structs and interfaces

flags:
  - name: verbose
    type: bool
    help: Output all results
    default: false

language: go
queries:
  - name: structDeclarations
    query: |
      ((comment)* @comment .
       (type_declaration
        (type_spec
          name: (type_identifier) @structName
          type: (struct_type) @structBody)))

  - name: interfaceDeclarations
    query: |
      ((comment)* @comment .
      (type_declaration
        (type_spec
          name: (type_identifier) @interfaceName
          type: (interface_type) @interfaceBody)))

  - name: functionDeclarations
    query: |
      ((comment)* @comment .
      (function_declaration
        name: (identifier) @name
        parameters: (parameter_list) @parameters
        result: (_) @result
        body: (block)))
  - name: methodDeclarations
    query: |
      ((comment)* @comment .
      (method_declaration
        receiver: (parameter_list) @receiver
        name: (field_identifier) @name
        parameters: (parameter_list) @parameters
        result: (_) @result
        body: (block)))

template: |
  {{ range $file, $results := .ResultsByFile -}}
  File: {{ $file }}
  {{ with $results -}}
  {{- range .structDeclarations.Matches }}
  {{ if .comment }}{{ .comment.Text |indentBlock 2}}{{end -}}
    type {{.structName.Text}} {{ .structBody.Text | indent 2 }}{{ end }}
  {{ range .interfaceDeclarations.Matches -}}
  {{ if .comment }}{{ .comment.Text |indentBlock 2}}
  {{end }}
    type {{ .interfaceName.Text }} {{ .interfaceBody.Text | indent 2}} {{ end }}
  {{ range .functionDeclarations.Matches }}
  {{ if .comment }}{{ .comment.Text |indentBlock 2}}{{end -}}
    func {{ .name.Text }}{{ .parameters.Text }} {{ .result.Text }} {{ end }}
  {{ range .methodDeclarations.Matches }}
  {{ if .comment }}{{ .comment.Text |indentBlock 2}}{{end -}}
    func {{.receiver.Text}} {{ .name.Text }}{{ .parameters.Text }} {{ .result.Text }}{{ end -}}
  {{ end -}}
  {{ end -}}

  {{ if .verbose -}}
  Results:{{ range $v := .Results }}
    {{ $v.Name }}: {{ range $match := $v.Matches }}{{ range $captureName, $captureValue := $match }}
       {{ $captureName }}: {{ $captureValue.Text }}{{ end }}
    {{end}}{{ end }}
  {{ end -}}
