language: go

description: | 
  This YAML DSL includes:
  
  A language field to specify the Tree-sitter language to use.
  A list of queries, each containing a name for the query and the query itself, written in the Tree-sitter query language.
  An optional template field that specifies a Go template to render the output of the queries.

  In this example, there are three queries: functionDeclarations, importStatements, and variableDeclarations. Each query is defined as a multi-line string, with the @ symbol used to tag specific nodes for later reference.

  The template field specifies a Go template that uses the range action to iterate over the results of each query, and output them in a structured format.

  You can modify the queries and template as needed to suit your specific use case.

queries:
  - name: functionDeclarations
    query: |
      (function_declaration
        name: (identifier) @name
        parameters: (parameter_list) @parameters
        body: (block))
  - name: importStatements
    query: |
      (import_declaration
        (import_spec_list [
          (import_spec
            (package_identifier) @name
             path: (interpreted_string_literal) @path)
          (import_spec
            path: (interpreted_string_literal) @path)
        ]))
  - name: variableDeclarations
    query: |
      (variable_declaration
        (identifier) @varName)

template: |
  Function Declarations:
  {{ range .functionDeclarations.Matches }}
  - {{ .name.Text }}{{ .parameters.Text }}{{ end }}

  Import Statements:
  {{ range .importStatements.Matches }}
  - {{ if .name }}name: {{ .name.Text }}, {{end -}} path: {{ .path.Text }}{{ end }}

  Variable Declarations:
  {{ range .variableDeclarations }}
  - Name: {{ .varName.text }}
  {{ end }}